@model RFQLog.Models.RFQLogModel

<script type="text/javascript">
    // server builds the message, so just display it either way
    var onSuccessOrFailure = function (result) {
        $('#ajaxMsg').text(result);
    }

    // Code to wire up your DatePicker
    $(function () {
        // This will make every element with the class "date-picker" into a DatePicker element
        $('.date-picker').datepicker();
    })
</script>


<form action="" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()

    <fieldset>
        <legend>Submit New RFQ Log</legend>
        <table style="width:100%">
            <tr>
                <td class="col-lg-6">
                    <label style="margin-left:5px; color:red">@Session["statusRed"]</label>

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="inputGroup">
                        @Html.LabelFor(model => model.RequestType, "Request Type", htmlAttributes: new { @class = "inputLabel" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.RequestType, new SelectList(RFQLog.Helpers.Lists.RequestTypeOptions), "PLEASE SELECT")
                            @Html.ValidationMessageFor(model => model.RequestType, "", new { @style = "color:red;", @class = "text-danger" })
                        </div>
                    </div>

                    <div class="inputGroup">
                        @Html.LabelFor(model => model.RequesterName, "Requested By", htmlAttributes: new { @class = "inputLabel" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.RequesterName, new SelectList(ViewBag.Requesters), "PLEASE SELECT")
                            @Html.ValidationMessageFor(model => model.RequesterName, "", new { @style = "color:red;", @class = "text-danger" })
                        </div>
                    </div>

                    <div class="inputGroup">
                        @Html.LabelFor(model => model.CustomerName, "Customer Name", htmlAttributes: new { @class = "inputLabel" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.CustomerName, new SelectList(ViewBag.CustomerNames), "PLEASE SELECT")
                            @Html.ValidationMessageFor(model => model.CustomerName, "", new { @style = "color:red;", @class = "text-danger" })
                        </div>
                    </div>

                    <div class="inputGroup">
                        @Html.LabelFor(model => model.Division, "Division", htmlAttributes: new { @class = "inputLabel" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Division, new SelectList(ViewBag.Divisions), "PLEASE SELECT")
                            @Html.ValidationMessageFor(model => model.Division, "", new { @style = "color:red;", @class = "text-danger" })
                        </div>
                    </div>

                    <div class="inputGroup">
                        @Html.LabelFor(model => model.Program, htmlAttributes: new { @class = "inputLabel" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Program, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Program, "", new { @style = "color:red;", @class = "text-danger" })
                        </div>
                    </div>

                    <div class="inputGroup">
                        @Html.LabelFor(model => model.PartNumber, "Parent Part Number", htmlAttributes: new { @class = "inputLabel" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PartNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PartNumber, "", new { @style = "color:red;", @class = "text-danger" })
                        </div>
                    </div>

                    <div class="inputGroup">
                        @Html.LabelFor(model => model.DrawingNumber, "Parent Drawing Number", htmlAttributes: new { @class = "inputLabel" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DrawingNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DrawingNumber, "", new { @style = "color:red;", @class = "text-danger" })
                        </div>
                    </div>

                    <div class="inputGroup">
                        @Html.LabelFor(model => model.DrawingDate, "Parent Drawing Date", htmlAttributes: new { @class = "inputLabel" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DrawingDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DrawingDate, "", new { @style = "color:red;", @class = "text-danger" })
                        </div>
                    </div>

                    <div class="inputGroup">
                        @Html.LabelFor(model => model.EngineeringLevel, "Parent Engineering Level", htmlAttributes: new { @class = "inputLabel" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.EngineeringLevel, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EngineeringLevel, "", new { @style = "color:red;", @class = "text-danger" })
                        </div>
                    </div>

                    <div class="inputGroup">
                        @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "inputLabel" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Reason, "", new { @style = "color:red;", @class = "text-danger" })
                        </div>
                    </div>

                    <div class="inputGroup">
                        @Html.LabelFor(model => model.SOPDate, "SOP Date", htmlAttributes: new { @class = "inputLabel" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SOPDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SOPDate, "", new { @style = "color:red;", @class = "text-danger" })
                        </div>
                    </div>

                    <div class="inputGroup">
                        @Html.LabelFor(model => model.PPAPDate, "PPAP Date", htmlAttributes: new { @class = "inputLabel" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PPAPDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PPAPDate, "", new { @style = "color:red;", @class = "text-danger" })
                        </div>
                    </div>

                    <div class="inputGroup">
                        @Html.LabelFor(model => model.EstAnnualVolume, "Component Estimated Annual Vol.", htmlAttributes: new { @class = "inputLabel" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.EstAnnualVolume, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EstAnnualVolume, "", new { @style = "color:red;", @class = "text-danger" })
                        </div>
                    </div>

                    <div class="inputGroup">
                        @Html.LabelFor(model => model.QuoteDueDate, "Quote Due Date", htmlAttributes: new { @class = "inputLabel" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.QuoteDueDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.QuoteDueDate, "", new { @style = "color:red;", @class = "text-danger" })
                        </div>
                    </div>
                </td>

                <td class="col-lg-6" style="vertical-align:top">
                    @Html.Partial("~/Views/RFQLog/Upload.cshtml")
                    
                    @if (ViewBag.Message != null)
                    {
                        <span style="color:green">@Html.Raw(ViewBag.Message)</span>
                        ViewBag.Message = "";
                    }
                    

                    @if (Session["filesToPost"] != null)
                    {
                        if (Model != null)
                        {
                            Model.PostedFiles = Session["filesToPost"] as List<HttpPostedFileBase>;
                        }
                    }
                </td>                
            </tr>
        </table>
        <div class="inputGroup">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" name="action:Create" class="my-btn-default" style="margin:5px 5px 5px 25%;" />
            </div>
        </div>
    </fieldset>
</form>
